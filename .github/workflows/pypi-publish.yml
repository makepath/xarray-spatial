name: Publish package to PyPI
on: [push]
jobs:
  publish:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Get release version
        env:
          TAG_VERSION: ${{ steps.vars.outputs.tag }}
          CHANGELOG_VERSION: $(cat CHANGELOG.md | grep -oP "(?<=###\s)(.*)(?=\s\-)" | head -n 1 | sed 's/Version\s/v/')
          CONDA_VERSION: $(cat conda.recipe/meta.yaml | grep -oP "(version\:.*)" | head -n 1 | sed 's/version\:\s/v/')
        run: |
          echo "CHANGELOG_VERSION=$(cat CHANGELOG.md | grep -oP '(?<=###\s)(.*)(?=\s\-)' | head -n 1 | sed 's/Version\s/v/')" >> $GITHUB_ENV
          echo "CONDA_VERSION=$(cat conda.recipe/meta.yaml | grep -oP '(version\:.*)' | head -n 1 | sed 's/version\:\s/v/')" >> $GITHUB_ENV
      - name: Show release versions
        run: |
          echo TAG_VERSION: $TAG_VERSION
          echo CHANGELOG_VERSION: $CHANGELOG_VERSION
          echo CONDA_VERSION: $CONDA_VERSION
      - name: Check changelog release version
        if: ${{ env.TAG_VERSION == env.CHANGELOG_VERSION }}
        run: echo "Changelog release version is correct"
      - name: Check conda release version
        if: ${{ env.TAG_VERSION == env.CONDA_VERSION }}
        run: echo "Conda release version is correct"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyct \
                      wheel \
                      setuptools
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
      - name: Check package size
        env:
          PKG_SIZE: $(find dist -maxdepth 1 -regex '.*gz' | xargs stat --format="%s")
        run: |
          echo PKG_SIZE: $PKG_SIZE
        if: ${{ env.PKG_SIZE > 1e+8 }}
      - name: Publish package
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}